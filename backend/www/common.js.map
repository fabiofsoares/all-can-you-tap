{"version":3,"sources":["webpack:///./node_modules/ngx-cookie-service/ngx-cookie-service.es5.js"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAgF;AAClB;AAC9D;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA,oCAAoC,yEAAiB;AACrD;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB;AACA,2BAA2B,EAAE,oCAAoC;AACjE,gCAAgC,EAAE,UAAU,kBAAkB;AAC9D,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE,kFAAkF;AAC3G;AACA;AACA,+BAA+B,EAAE;AACjC,2EAA2E;AAC3E;AACA;AACA,uEAAuE;AACvE;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA,mDAAmD;AACnD;AACA;AACA,oCAAoC;AACpC;AACA;AACA,uDAAuD;AACvD;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,4BAA4B,EAAE;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE,wCAAwC,EAAE,UAAU;AAC7E,oDAAoD,kCAAkC;AACtF;AACA;AACA,CAAC;AACD;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB;AACA;AACA;AACA;AACA,4CAA4C;AAC5C,KAAK,gCAAgC,OAAO,oDAAM,SAAS,wDAAQ,IAAI,IAAI;AAC3E,KAAK,OAAO,4DAAc,gBAAgB,OAAO,oDAAM,SAAS,yDAAW,IAAI,IAAI;AACnF,EAAE;AACF;AACA;AACA;AACyB;AACzB","file":"common.js","sourcesContent":["import { Inject, Injectable, InjectionToken, PLATFORM_ID } from '@angular/core';\nimport { DOCUMENT, isPlatformBrowser } from '@angular/common';\n// This service is based on the `ng2-cookies` package which sadly is not a service and does\n// not use `DOCUMENT` injection and therefore doesn't work well with AoT production builds.\n// Package: https://github.com/BCJTI/ng2-cookies\nvar CookieService = (function () {\n    /**\n     * @param {?} document\n     * @param {?} platformId\n     */\n    function CookieService(document, platformId) {\n        this.document = document;\n        this.platformId = platformId;\n        this.documentIsAccessible = isPlatformBrowser(this.platformId);\n    }\n    /**\n     * @param {?} name Cookie name\n     * @return {?}\n     */\n    CookieService.prototype.check = function (name) {\n        if (!this.documentIsAccessible) {\n            return false;\n        }\n        name = encodeURIComponent(name);\n        var /** @type {?} */ regExp = this.getCookieRegExp(name);\n        var /** @type {?} */ exists = regExp.test(this.document.cookie);\n        return exists;\n    };\n    /**\n     * @param {?} name Cookie name\n     * @return {?}\n     */\n    CookieService.prototype.get = function (name) {\n        if (this.documentIsAccessible && this.check(name)) {\n            name = encodeURIComponent(name);\n            var /** @type {?} */ regExp = this.getCookieRegExp(name);\n            var /** @type {?} */ result = regExp.exec(this.document.cookie);\n            return decodeURIComponent(result[1]);\n        }\n        else {\n            return '';\n        }\n    };\n    /**\n     * @return {?}\n     */\n    CookieService.prototype.getAll = function () {\n        if (!this.documentIsAccessible) {\n            return {};\n        }\n        var /** @type {?} */ cookies = {};\n        var /** @type {?} */ document = this.document;\n        if (document.cookie && document.cookie !== '') {\n            var /** @type {?} */ split = document.cookie.split(';');\n            for (var /** @type {?} */ i = 0; i < split.length; i += 1) {\n                var /** @type {?} */ currentCookie = split[i].split('=');\n                currentCookie[0] = currentCookie[0].replace(/^ /, '');\n                cookies[decodeURIComponent(currentCookie[0])] = decodeURIComponent(currentCookie[1]);\n            }\n        }\n        return cookies;\n    };\n    /**\n     * @param {?} name     Cookie name\n     * @param {?} value    Cookie value\n     * @param {?=} expires  Number of days until the cookies expires or an actual `Date`\n     * @param {?=} path     Cookie path\n     * @param {?=} domain   Cookie domain\n     * @param {?=} secure   Secure flag\n     * @param {?=} sameSite OWASP samesite token `Lax` or `Strict`\n     * @return {?}\n     */\n    CookieService.prototype.set = function (name, value, expires, path, domain, secure, sameSite) {\n        if (!this.documentIsAccessible) {\n            return;\n        }\n        var /** @type {?} */ cookieString = encodeURIComponent(name) + '=' + encodeURIComponent(value) + ';';\n        if (expires) {\n            if (typeof expires === 'number') {\n                var /** @type {?} */ dateExpires = new Date(new Date().getTime() + expires * 1000 * 60 * 60 * 24);\n                cookieString += 'expires=' + dateExpires.toUTCString() + ';';\n            }\n            else {\n                cookieString += 'expires=' + expires.toUTCString() + ';';\n            }\n        }\n        if (path) {\n            cookieString += 'path=' + path + ';';\n        }\n        if (domain) {\n            cookieString += 'domain=' + domain + ';';\n        }\n        if (secure) {\n            cookieString += 'secure;';\n        }\n        if (sameSite) {\n            cookieString += 'sameSite=' + sameSite + ';';\n        }\n        this.document.cookie = cookieString;\n    };\n    /**\n     * @param {?} name   Cookie name\n     * @param {?=} path   Cookie path\n     * @param {?=} domain Cookie domain\n     * @return {?}\n     */\n    CookieService.prototype.delete = function (name, path, domain) {\n        if (!this.documentIsAccessible) {\n            return;\n        }\n        this.set(name, '', new Date('Thu, 01 Jan 1970 00:00:01 GMT'), path, domain);\n    };\n    /**\n     * @param {?=} path   Cookie path\n     * @param {?=} domain Cookie domain\n     * @return {?}\n     */\n    CookieService.prototype.deleteAll = function (path, domain) {\n        if (!this.documentIsAccessible) {\n            return;\n        }\n        var /** @type {?} */ cookies = this.getAll();\n        for (var /** @type {?} */ cookieName in cookies) {\n            if (cookies.hasOwnProperty(cookieName)) {\n                this.delete(cookieName, path, domain);\n            }\n        }\n    };\n    /**\n     * @param {?} name Cookie name\n     * @return {?}\n     */\n    CookieService.prototype.getCookieRegExp = function (name) {\n        var /** @type {?} */ escapedName = name.replace(/([\\[\\]\\{\\}\\(\\)\\|\\=\\;\\+\\?\\,\\.\\*\\^\\$])/ig, '\\\\$1');\n        return new RegExp('(?:^' + escapedName + '|;\\\\s*' + escapedName + ')=(.*?)(?:;|$)', 'g');\n    };\n    return CookieService;\n}());\nCookieService.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nCookieService.ctorParameters = function () { return [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] },] },\n    { type: InjectionToken, decorators: [{ type: Inject, args: [PLATFORM_ID,] },] },\n]; };\n/**\n * Generated bundle index. Do not edit.\n */\nexport { CookieService };\n//# sourceMappingURL=ngx-cookie-service.es5.js.map\n"],"sourceRoot":""}