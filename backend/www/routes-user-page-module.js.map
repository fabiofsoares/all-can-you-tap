{"version":3,"sources":["webpack:///./src/app/routes/user-page/module.ts","webpack:///./src/app/routes/user-page/router.ts","webpack:///./src/app/routes/user-page/user-page.component.html","webpack:///./src/app/routes/user-page/user-page.component.ts","webpack:///./src/app/services/game/game-service.service.ts"],"names":[],"mappings":"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","file":"routes-user-page-module.js","sourcesContent":["/* \nImports \n*/\n    // Angular\n    import { NgModule } from '@angular/core';\n    import { CommonModule } from '@angular/common';\n\n    // Inner\n    import { Routing } from './router';\n    import { UserPageComponent } from './user-page.component';\n//\n\n\n/* \nDefinition \n*/\n    @NgModule({\n        declarations: [ UserPageComponent ],\n        imports: [ \n            CommonModule, \n            Routing\n        ]\n    })\n//\n\n\n/* \nExport \n*/\n    export class Module {};\n//","/* \nImports \n*/\n    import { ModuleWithProviders } from '@angular/core';\n    import { Routes, RouterModule } from '@angular/router';\n    import { UserPageComponent } from './user-page.component';\n//\n\n\n/* \nDefinition \n*/\n    const route: Routes = [\n        {\n            path: '',\n            component: UserPageComponent\n        }\n    ];\n//\n\n\n/* \nExport \n*/\n    export const Routing: ModuleWithProviders = RouterModule.forChild(route);\n//","module.exports = \"<div class=\\\"container-me\\\">\\n    <div class=\\\"content game\\\">\\n        <h2>Timing : {{time}}</h2>\\n        <div class=\\\"button-container on-container\\\">\\n            <button [disabled]=\\\"stop\\\" (click)=\\\"onClickMe()\\\" class=\\\"on-button\\\">{{qtt === 0 ? \\\"START\\\" : qtt}}</button>\\n        </div>\\n        <div class=\\\"button-container restart-container\\\">\\n            <button (click)=\\\"onRestart()\\\" class=\\\"restart-button\\\">RESTART</button>\\n        </div>\\n    </div>\\n    <div class=\\\"content ranking\\\">\\n        <h2>Ranking</h2>\\n        <div class=\\\"item\\\" *ngFor=\\\"let game of games\\\">\\n            <div>Point : {{game.point}}</div>\\n            <div>Date : {{game.time | date:'dd/MM/yy - HH:mm'}}</div>\\n        </div>\\n    </div>\\n</div>\"","/* \nImports & definition \n*/\n  // Imports\n  import { Component, OnInit } from '@angular/core';\n\n  // Inner\n  import { IdentityModel } from '../../models/identity.model';\n  import { GameModel } from '../../models/game.model';\n  import { ApiResponseModel } from \"../../models/api.reponse.model\";\n  import { AuthService } from \"../../services/auth/auth-service.service\";\n  import { GameService } from \"../../services/game/game-service.service\";\n   // Cookie service\n  import { CookieService } from 'ngx-cookie-service';\n\n  // Definition\n  @Component({\n    selector: 'app-user-page',\n    templateUrl: './user-page.component.html',\n    providers: [ AuthService, GameService, CookieService ]\n  })\n//\n\n\n/* \nExport\n*/\n  export class UserPageComponent implements OnInit {\n    user: IdentityModel[] = [];\n    qtt = 0;\n    time = 5;\n    stop = false;\n    first = true;\n    data = {};\n    games = {}\n    public apiMessageLogin : String\n    /* \n    Config.\n    */\n      // Module injection\n      constructor(\n        private AuthService: AuthService,\n        private GameService: GameService,\n        private cookieService: CookieService\n      ) {};\n    //\n\n\n    /*\n    Methods\n    */\n    //\n    onClickMe() {\n        if(this.first) {\n            this.first = false;\n            this.startGame();\n            this.qtt++;\n        \n        } else {\n            this.qtt++;\n        }\n    }\n\n    onRestart() {\n        this.qtt = 0;\n        this.time = 5;\n        this.stop = false;\n        this.first = true;\n    }\n\n    startGame() {\n        let id = setInterval( () => {\n            if(this.time !== 0) {\n                this.time--;\n            } else {\n                clearInterval(id)\n                this.stop = true;\n                \n                let data = {\n                    user : this.cookieService.get('userid'),\n                    point : this.qtt,\n                    time : new Date()\n                }\n\n                this.saveGame(data)\n            }\n            \n        }, 1000)\n    }\n\n    public saveGame = (data : GameModel) => {\n        // Send user data\n        this.GameService.save(data)\n        .then( (apiResponse: ApiResponseModel) => {\n            // API success response\n            this.apiMessageLogin = apiResponse.message;\n            console.log('sucess :', this.apiMessageLogin); \n            this.getAll();   \n        })\n        .catch( (apiResponse: ApiResponseModel) => {\n            // API error response\n            this.apiMessageLogin = apiResponse.message;\n            console.log('error :', this.apiMessageLogin)\n        })\n    };\n\n    public getAll() {\n        this.GameService.getGames().then((data : GameModel[]) => {\n            this.games = data.message\n        }); \n    } \n\n    /* \n    Hooks\n    */\n    ngOnInit() {         \n        this.getAll();\n    };\n    //\n  }\n//","/* \nImports \n*/\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n// import 'rxjs/add/operator/toPromise';\nimport { environment } from \"../../../environments/environment\";\nimport { GameModel } from '../../models/game.model';\nimport { CookieService } from 'ngx-cookie-service';\n//\n\n/* \nDefinition \n*/\n@Injectable()\nexport class GameService {\n\n    // Inject module(s) in the service\n    constructor( private HttpClient: HttpClient,  private cookieService: CookieService ){};\n  \n\n    public save(gameData: GameModel): Promise<any>{\n        // Set header\n        let myHeader = new HttpHeaders();\n        myHeader.append('Content-Type', 'application/json');\n\n        // POST \n        return this.HttpClient.post(`${environment.apiUrl}/game/`, gameData, { headers: myHeader })\n        .toPromise().then(this.getData).catch(this.handleError);\n    };\n\n    public getGames(): Promise<any>{ \n      \n      let myHeader = new HttpHeaders();\n      myHeader.append('Content-Type', 'application/json');\n\n      let userid = this.cookieService.get('userid');\n          \n      return this.HttpClient.get(`${environment.apiUrl}/game/${userid}`, { headers: myHeader })\n        .toPromise().then(this.getData).catch(this.handleError);\n    }\n\n    // Get the API response\n    private getData(res: any){\n      return res || {};\n    };\n\n    // Get the API error\n    private handleError(err: any){\n      return Promise.reject(err.error);\n    };\n}"],"sourceRoot":""}